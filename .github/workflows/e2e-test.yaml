name: e2e-test

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  REPOSITORY: koperator_e2e_test  

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Clean workspace
        run: |
          # Remove any existing go.work files to ensure clean module resolution
          rm -f go.work go.work.sum

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.19.0'
          
      - name: Clean Go module cache
        run: |
          # Clean any existing Go module cache to avoid conflicts
          # Use sudo to handle permission issues and force removal
          sudo rm -rf ~/go/pkg/mod || true
          mkdir -p ~/go/pkg/mod
          # Ensure proper permissions
          chmod -R 755 ~/go/pkg/mod

      - name: Cache Go modules
        uses: actions/cache/restore@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-e2e-gomod-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-e2e-gomod-
            ${{ runner.os }}-gomod-
          enableCrossOsArchive: false
          fail-on-cache-miss: false
            
      - name: Cache Go build cache
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-e2e-gobuild-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-e2e-gobuild-
            ${{ runner.os }}-gobuild-
          enableCrossOsArchive: false
          fail-on-cache-miss: false
          
      # Enable Tmate Session if you'd like to Debut the E2E Kind Cluster
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      #   with:
      #     detached: true
      
      - name: Build docker image
        run: |
          IMG=$REPOSITORY:$GITHUB_SHA make docker-build

      - name: Setup Kind cluster
        id: setup-kind
        uses: ./.github/actions/kind-create

      - name: Load image into kind cluster
        run: |
          kind load docker-image $REPOSITORY:$GITHUB_SHA --name e2e-kind


      - name: Download dependencies
        run: |
          # Download dependencies for all modules
          go mod download
          cd api && go mod download && cd ..
          cd properties && go mod download && cd ..
          cd tests/e2e && go mod download && cd ../..

      - name: Save Go modules cache
        uses: actions/cache/save@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-e2e-gomod-${{ hashFiles('**/go.sum') }}

      - name: Save Go build cache
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/go-build
          key: ${{ runner.os }}-e2e-gobuild-${{ github.sha }}
          
      - name: Run E2E tests
        env:
           KUBECONFIG: ${{ steps.setup-kind.outputs.kubeconfig }}
        run: |
          # Clean any existing go.work files to avoid workspace conflicts
          rm -f go.work go.work.sum
          IMG_E2E=$REPOSITORY:$GITHUB_SHA make test-e2e
