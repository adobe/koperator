name: build-publish-kafka-docker-image

on:
  push:
    tags:
      - 'kafka-*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # GitHub Container Registry
  GHCR_REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  GHCR_IMAGE_NAME: ${{ github.repository }}/kafka
  # Docker Hub image name
  DOCKERHUB_IMAGE: adobe/kafka

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      # Login against Docker Hub
      - name: Login to DockerHub Registry
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Login against GitHub Container Registry
      - name: Log into GitHub Container Registry ${{ env.GHCR_REGISTRY }}
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GHCR_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Release Date
        run: |
          echo "BUILT_AT=$(date --rfc-3339=date)" >> ${GITHUB_ENV}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_IMAGE }}
            ${{ env.GHCR_REGISTRY }}/${{ env.GHCR_IMAGE_NAME }}
          tags: |
            type=match,pattern=kafka-(.*),group=1
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: docker/kafka
          platforms: linux/amd64,linux/arm64
          push: ${{ startsWith(github.ref, 'refs/tags/') }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            BUILT_AT=${{ env.BUILT_AT }}
            COMMIT=${{ github.sha }}
