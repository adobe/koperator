// Copyright 2021 Cisco Systems, Inc. and/or its affiliates.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: api/v1alpha1/istiomeshgateway.proto

// $schema: istio-operator.api.v1alpha1.IstioMeshGatewaySpec
// $title: Istio Mesh Gateway Spec
// $description: Istio Mesh Gateway descriptor

package v1alpha1

import (
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "k8s.io/api/core/v1"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GatewayType int32

const (
	GatewayType_unspecified GatewayType = 0
	GatewayType_ingress     GatewayType = 1
	GatewayType_egress      GatewayType = 2
)

// Enum value maps for GatewayType.
var (
	GatewayType_name = map[int32]string{
		0: "unspecified",
		1: "ingress",
		2: "egress",
	}
	GatewayType_value = map[string]int32{
		"unspecified": 0,
		"ingress":     1,
		"egress":      2,
	}
)

func (x GatewayType) Enum() *GatewayType {
	p := new(GatewayType)
	*p = x
	return p
}

func (x GatewayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GatewayType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_v1alpha1_istiomeshgateway_proto_enumTypes[0].Descriptor()
}

func (GatewayType) Type() protoreflect.EnumType {
	return &file_api_v1alpha1_istiomeshgateway_proto_enumTypes[0]
}

func (x GatewayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GatewayType.Descriptor instead.
func (GatewayType) EnumDescriptor() ([]byte, []int) {
	return file_api_v1alpha1_istiomeshgateway_proto_rawDescGZIP(), []int{0}
}

// IstioMeshGateway defines an Istio ingress or egress gateway
//
// <!-- crd generation tags
// +cue-gen:IstioMeshGateway:groupName:servicemesh.cisco.com
// +cue-gen:IstioMeshGateway:version:v1alpha1
// +cue-gen:IstioMeshGateway:storageVersion
// +cue-gen:IstioMeshGateway:annotations:helm.sh/resource-policy=keep
// +cue-gen:IstioMeshGateway:subresource:status
// +cue-gen:IstioMeshGateway:scope:Namespaced
// +cue-gen:IstioMeshGateway:resource:shortNames=imgw,istiomgw
// +cue-gen:IstioMeshGateway:printerColumn:name="Type",type="string",JSONPath=".spec.type",description="Type of the gateway"
// +cue-gen:IstioMeshGateway:printerColumn:name="Service Type",type="string",JSONPath=".spec.service.type",description="Type of the service"
// +cue-gen:IstioMeshGateway:printerColumn:name="Status",type="string",JSONPath=".status.Status",description="Status of the resource"
// +cue-gen:IstioMeshGateway:printerColumn:name="Ingress IPs",type="string",JSONPath=".status.GatewayAddress",description="Ingress gateway addresses of the resource"
// +cue-gen:IstioMeshGateway:printerColumn:name="Error",type="string",JSONPath=".status.ErrorMessage",description="Error message"
// +cue-gen:IstioMeshGateway:printerColumn:name="Age",type="date",JSONPath=".metadata.creationTimestamp"
// +cue-gen:IstioMeshGateway:printerColumn:name="Control Plane",type="string",JSONPath=".spec.istioControlPlane"
// +cue-gen:IstioMeshGateway:preserveUnknownFields:false
// +cue-gen:IstioMeshGateway:specIsRequired
// -->
//
// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
type IstioMeshGatewaySpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deployment spec
	Deployment *BaseKubernetesResourceConfig `protobuf:"bytes,1,opt,name=deployment,proto3" json:"deployment,omitempty"`
	// Service spec
	Service *Service `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	// Whether to run the gateway in a privileged container
	RunAsRoot *wrappers.BoolValue `protobuf:"bytes,3,opt,name=runAsRoot,proto3" json:"runAsRoot,omitempty"`
	// Type of gateway, either ingress or egress
	// +kubebuilder:validation:Enum=ingress;egress
	Type GatewayType `protobuf:"varint,4,opt,name=type,proto3,enum=istio_operator.v2.api.v1alpha1.GatewayType" json:"type,omitempty"`
	// Istio CR to which this gateway belongs to
	IstioControlPlane *NamespacedName `protobuf:"bytes,5,opt,name=istioControlPlane,proto3" json:"istioControlPlane,omitempty"`
	// K8s resource overlay patches
	K8SResourceOverlays []*K8SResourceOverlayPatch `protobuf:"bytes,6,rep,name=k8sResourceOverlays,proto3" json:"k8sResourceOverlays,omitempty"`
}

func (x *IstioMeshGatewaySpec) Reset() {
	*x = IstioMeshGatewaySpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_istiomeshgateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IstioMeshGatewaySpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IstioMeshGatewaySpec) ProtoMessage() {}

func (x *IstioMeshGatewaySpec) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_istiomeshgateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IstioMeshGatewaySpec.ProtoReflect.Descriptor instead.
func (*IstioMeshGatewaySpec) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_istiomeshgateway_proto_rawDescGZIP(), []int{0}
}

func (x *IstioMeshGatewaySpec) GetDeployment() *BaseKubernetesResourceConfig {
	if x != nil {
		return x.Deployment
	}
	return nil
}

func (x *IstioMeshGatewaySpec) GetService() *Service {
	if x != nil {
		return x.Service
	}
	return nil
}

func (x *IstioMeshGatewaySpec) GetRunAsRoot() *wrappers.BoolValue {
	if x != nil {
		return x.RunAsRoot
	}
	return nil
}

func (x *IstioMeshGatewaySpec) GetType() GatewayType {
	if x != nil {
		return x.Type
	}
	return GatewayType_unspecified
}

func (x *IstioMeshGatewaySpec) GetIstioControlPlane() *NamespacedName {
	if x != nil {
		return x.IstioControlPlane
	}
	return nil
}

func (x *IstioMeshGatewaySpec) GetK8SResourceOverlays() []*K8SResourceOverlayPatch {
	if x != nil {
		return x.K8SResourceOverlays
	}
	return nil
}

type Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Properties) Reset() {
	*x = Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_istiomeshgateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Properties) ProtoMessage() {}

func (x *Properties) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_istiomeshgateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Properties.ProtoReflect.Descriptor instead.
func (*Properties) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_istiomeshgateway_proto_rawDescGZIP(), []int{1}
}

func (x *Properties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// <!-- go code generation tags
// +genclient
// +k8s:deepcopy-gen=true
// -->
type IstioMeshGatewayStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Reconciliation status of the istio mesh gateway
	Status ConfigState `protobuf:"varint,1,opt,name=Status,proto3,enum=istio_operator.v2.api.v1alpha1.ConfigState" json:"Status,omitempty"`
	// Current address for the gateway
	GatewayAddress []string `protobuf:"bytes,2,rep,name=GatewayAddress,proto3" json:"GatewayAddress,omitempty"`
	// Reconciliation error message if any
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage,proto3" json:"ErrorMessage,omitempty"`
}

func (x *IstioMeshGatewayStatus) Reset() {
	*x = IstioMeshGatewayStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_v1alpha1_istiomeshgateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IstioMeshGatewayStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IstioMeshGatewayStatus) ProtoMessage() {}

func (x *IstioMeshGatewayStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1alpha1_istiomeshgateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IstioMeshGatewayStatus.ProtoReflect.Descriptor instead.
func (*IstioMeshGatewayStatus) Descriptor() ([]byte, []int) {
	return file_api_v1alpha1_istiomeshgateway_proto_rawDescGZIP(), []int{2}
}

func (x *IstioMeshGatewayStatus) GetStatus() ConfigState {
	if x != nil {
		return x.Status
	}
	return ConfigState_Unspecified
}

func (x *IstioMeshGatewayStatus) GetGatewayAddress() []string {
	if x != nil {
		return x.GatewayAddress
	}
	return nil
}

func (x *IstioMeshGatewayStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_api_v1alpha1_istiomeshgateway_proto protoreflect.FileDescriptor

var file_api_v1alpha1_istiomeshgateway_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x69,
	0x73, 0x74, 0x69, 0x6f, 0x6d, 0x65, 0x73, 0x68, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x22, 0x6b, 0x38, 0x73, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8d, 0x04, 0x0a, 0x14, 0x49, 0x73, 0x74, 0x69, 0x6f, 0x4d,
	0x65, 0x73, 0x68, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x5c,
	0x0a, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0a, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x47, 0x0a, 0x07,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x07, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x52, 0x6f,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x72, 0x75, 0x6e, 0x41, 0x73, 0x52, 0x6f, 0x6f, 0x74, 0x12,
	0x45, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e,
	0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76,
	0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x47,
	0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x62, 0x0a, 0x11, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x11, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x69, 0x0a, 0x13, 0x6b, 0x38,
	0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x4b, 0x38, 0x73, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4f, 0x76, 0x65, 0x72, 0x6c, 0x61, 0x79, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x13, 0x6b, 0x38, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x76, 0x65,
	0x72, 0x6c, 0x61, 0x79, 0x73, 0x22, 0x20, 0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x16, 0x49, 0x73, 0x74, 0x69,
	0x6f, 0x4d, 0x65, 0x73, 0x68, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x43, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x76, 0x32, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x31, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x47, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0e, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2a, 0x37, 0x0a, 0x0b, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x75, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x69, 0x6e, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x65, 0x67, 0x72, 0x65, 0x73, 0x73, 0x10, 0x02, 0x42, 0x37, 0x5a, 0x35,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x61, 0x6e, 0x7a, 0x61,
	0x69, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x69, 0x73, 0x74, 0x69, 0x6f, 0x2d, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_v1alpha1_istiomeshgateway_proto_rawDescOnce sync.Once
	file_api_v1alpha1_istiomeshgateway_proto_rawDescData = file_api_v1alpha1_istiomeshgateway_proto_rawDesc
)

func file_api_v1alpha1_istiomeshgateway_proto_rawDescGZIP() []byte {
	file_api_v1alpha1_istiomeshgateway_proto_rawDescOnce.Do(func() {
		file_api_v1alpha1_istiomeshgateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_v1alpha1_istiomeshgateway_proto_rawDescData)
	})
	return file_api_v1alpha1_istiomeshgateway_proto_rawDescData
}

var file_api_v1alpha1_istiomeshgateway_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_v1alpha1_istiomeshgateway_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_api_v1alpha1_istiomeshgateway_proto_goTypes = []interface{}{
	(GatewayType)(0),                     // 0: istio_operator.v2.api.v1alpha1.GatewayType
	(*IstioMeshGatewaySpec)(nil),         // 1: istio_operator.v2.api.v1alpha1.IstioMeshGatewaySpec
	(*Properties)(nil),                   // 2: istio_operator.v2.api.v1alpha1.Properties
	(*IstioMeshGatewayStatus)(nil),       // 3: istio_operator.v2.api.v1alpha1.IstioMeshGatewayStatus
	(*BaseKubernetesResourceConfig)(nil), // 4: istio_operator.v2.api.v1alpha1.BaseKubernetesResourceConfig
	(*Service)(nil),                      // 5: istio_operator.v2.api.v1alpha1.Service
	(*wrappers.BoolValue)(nil),           // 6: google.protobuf.BoolValue
	(*NamespacedName)(nil),               // 7: istio_operator.v2.api.v1alpha1.NamespacedName
	(*K8SResourceOverlayPatch)(nil),      // 8: istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch
	(ConfigState)(0),                     // 9: istio_operator.v2.api.v1alpha1.ConfigState
}
var file_api_v1alpha1_istiomeshgateway_proto_depIdxs = []int32{
	4, // 0: istio_operator.v2.api.v1alpha1.IstioMeshGatewaySpec.deployment:type_name -> istio_operator.v2.api.v1alpha1.BaseKubernetesResourceConfig
	5, // 1: istio_operator.v2.api.v1alpha1.IstioMeshGatewaySpec.service:type_name -> istio_operator.v2.api.v1alpha1.Service
	6, // 2: istio_operator.v2.api.v1alpha1.IstioMeshGatewaySpec.runAsRoot:type_name -> google.protobuf.BoolValue
	0, // 3: istio_operator.v2.api.v1alpha1.IstioMeshGatewaySpec.type:type_name -> istio_operator.v2.api.v1alpha1.GatewayType
	7, // 4: istio_operator.v2.api.v1alpha1.IstioMeshGatewaySpec.istioControlPlane:type_name -> istio_operator.v2.api.v1alpha1.NamespacedName
	8, // 5: istio_operator.v2.api.v1alpha1.IstioMeshGatewaySpec.k8sResourceOverlays:type_name -> istio_operator.v2.api.v1alpha1.K8sResourceOverlayPatch
	9, // 6: istio_operator.v2.api.v1alpha1.IstioMeshGatewayStatus.Status:type_name -> istio_operator.v2.api.v1alpha1.ConfigState
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_api_v1alpha1_istiomeshgateway_proto_init() }
func file_api_v1alpha1_istiomeshgateway_proto_init() {
	if File_api_v1alpha1_istiomeshgateway_proto != nil {
		return
	}
	file_api_v1alpha1_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_v1alpha1_istiomeshgateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IstioMeshGatewaySpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_istiomeshgateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_v1alpha1_istiomeshgateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IstioMeshGatewayStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_v1alpha1_istiomeshgateway_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_v1alpha1_istiomeshgateway_proto_goTypes,
		DependencyIndexes: file_api_v1alpha1_istiomeshgateway_proto_depIdxs,
		EnumInfos:         file_api_v1alpha1_istiomeshgateway_proto_enumTypes,
		MessageInfos:      file_api_v1alpha1_istiomeshgateway_proto_msgTypes,
	}.Build()
	File_api_v1alpha1_istiomeshgateway_proto = out.File
	file_api_v1alpha1_istiomeshgateway_proto_rawDesc = nil
	file_api_v1alpha1_istiomeshgateway_proto_goTypes = nil
	file_api_v1alpha1_istiomeshgateway_proto_depIdxs = nil
}
